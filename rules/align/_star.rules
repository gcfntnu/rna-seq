#-*- mode: snakemake -*-
"""

Snakemake rules for aligning rna-seq fastq files to genome using the
STAR aligner.

This is a single pass alignment with known reference and gene model. The
output is coordinate sorted bam files with marked duplicates and the
companion index (.bai) file.


Dependencies
------------
STAR, https://github.com/alexdobin/STAR
SAMBAMBA,

"""

import os
from os.path import join

extra_conf_fn = srcdir('star.config')
if os.path.exists(extra_conf_fn):
    with open(extra_conf_fn) as fh:
        c  = yaml.load(fh) or {}
        update_config2(config, c)

STAR_INTERIM = join(ALIGN_INTERIM, 'star')
STAR_PROCESSED = join(ALIGN_PROCESSED, 'star')
REF = config['align']['reference']

def star_input_params(wildcards):
    """Multiple fastq files per sample workaround.

    STAR uses comma separated input when defining a read with mutiple fastq files.
    A comma separated string is not a valid input file in snakemake.
    A work around in snakemake is to build the comma separated input string as a params.fastq
    
    """
    fastq_files = get_processed_fastq(wildcards)
    if config['samples'][wildcards.sample]['paired_end']: 
        R1 = fastq_files[::2]
        R2 = fastq_files[1::2]
        assert(len(R1) == len(R2))
    else:
        R1 = fastq_files
        R2 = []
    R1 = ','.join(sorted(set(R1)))
    R2 = ','.join(sorted(set(R2)))
    input_string = ' '.join([R1, R2])
    return input_string

def index_read_length(*args, **kw):
    """Return the closest STAR index build path
    """
    read_geometry = config.get('read_geometry', '1x75')
    num, read_length = read_geometry.split('x')
    num = int(num)
    if '|' in read_length:
        read_length = sum([int(i) for i in read_length.split('|')])
    else:
        read_length = int(read_length)
    read_length = num * read_length
    builds = [50, 75, 85, 150]
    match, k = None, 1000
    for b in builds:
        diff = abs(b - read_length)
        if diff < k:
            k = diff
            match = b
    match = match or 150
    return match - 1


rule star_align:
    input:
        genome = 
