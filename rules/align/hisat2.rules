#-*- mode: snakemake -*-
"""
Snakemake rules for aligning rna-seq fastq files to genome using the
HISAT2 aligner.
"""

import os
from os.path import join

extra_conf_fn = srcdir('hisat2.config')
if os.path.exists(extra_conf_fn):
    with open(extra_conf_fn) as fh:
        c  = yaml.load(fh) or {}
        update_config2(config, c)

HISAT_INTERIM = join(ALIGN_INTERIM, 'hisat2')
HISAT_PROCESSED = join(ALIGN_PROCESSED, 'hisat2')

def hisat2_input(wildcards):
    fastq = get_processed_fastq(wildcards)
    sample = config['samples'][wildcards.sample]
    PE = sample.get('paired_end') or len(config['read_geometry']) > 1
    R1 = fastq['R1']
    if PE:
        input = '-1 ' + ','.join(R1)
        R2 = fastq.get('R2', [])
        input += ' -2 ' + ','.join(R2)
    else:
        input = '-U ' + ','.join(R1)
    return input
    
rule hisat2_align:
    input:
        unpack(get_processed_fastq),
        index = join(REF_DIR, 'index', 'genome', 'hisat2', 'genome' + '.1.ht2'),
        db_log = join(REF_DIR, 'logs', 'ensembl.dna.log')
    params:
        input = hisat2_input,
        index = lambda wildcards,input: input.index.split('.1.ht2')[0],
        unaligned = join(HISAT_INTERIM, '{sample}.unaligned.fastq.gz')
    output:
        sam = pipe(join(HISAT_INTERIM, '{sample}.out.sam'))
    threads:
        40
    singularity:
        'docker://' + config['docker']['hisat2']
    shell:
        'hisat2 '
        '-p {threads} '
        '--un-conc-gz {params.unaligned} '
        '-x {params.index} '
        '{params.input} '
        '-S {output.sam} '

rule hisat2_sorted_bam:
    input:
        sam = rules.hisat2_align.output.sam
    output:
        bam = temp(join(ALIGN_INTERIM, 'hisat2', '{sample}.Aligned.sortedByCoord.out.bam'))
    threads:
        4
    shell:
         'cat {input.sam} | sambamba view -S -f bam /dev/stdin | sambamba sort -m 24G -t {threads} -o {output.bam} /dev/stdin '

rule hisat2_all:
    input:
        expand(rules.hisat2_sorted_bam.output.bam, sample=SAMPLES)
    output:
        temp(touch('.align.finalized'))
