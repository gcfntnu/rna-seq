#-*- mode: snakemake -*-

"""
Snakemake rules for counting gene expression values from aligned data using featurecounts
"""

extra_conf_fn = srcdir('salmon.config')
if os.path.exists(extra_conf_fn):
    with open(extra_conf_fn) as fh:
        c  = yaml.load(fh) or {}
        update_config2(config, c)

FC_INTERIM = join(QUANT_INTERIM, config['align']['method'], 'featurecounts')
FC_PROCESSED = join(QUANT_PROCESSED, 'featurecounts')

## config params

def featurecounts_strand(wildcards, **kw):
    read_orientation = config.get('read_orientation')
    STRAND = '0' if read_orientation == 'u' else '-s 1' if read_orientation == 'fr' else '-s 2'
    return STRAND

def featurecounts_paired_end(wildcards, **kw):
    sample = config['samples'][wildcards.sample]
    if sample['paired_end']:
        return '-p -B -C '
    return ''

rule featurecounts:
    input:
        bam = rules.namesorted_bam.output,
        gtf = join(REF_DIR, 'genes', 'genes.gtf')
    params:
        strand = featurecounts_strand,
        paired_end = featurecounts_paired_end,
        summary = join(FC_INTERIM, '{sample}', 'counts.txt.summary'),
        args = '--primary '
    log:
        'logs/{sample}/featurecounts.txt.summary'
    threads:
        16
    singularity:
        'docker://quay.io/biocontainers/subread:1.6.3--h84994c4_1'
    output:
        counts = join(FC_INTERIM, '{sample}', 'counts.txt')
    shell:
        'featureCounts '
        '-a {input.gtf} '
        '-o {output.counts} '
        '-T {threads} '
        '{params.strand} '
        '{params.paired_end} '
        '{params.args} '
        '{input.bam} '
        '&& '
        'mv {params.summary} {log}'

rule featurecounts_quant:
    input:
        counts = expand(rules.featurecounts.output.counts, sample=SAMPLES),
        gene_info = join(REF_DIR, 'genes', 'genes.tsv')
    params:
        output = join(FC_PROCESSED, 'featurecounts'),
        script = srcdir('scripts/gene_quant.R')
    singularity:
        'docker://flatberg/tximport:0.1'
    output:
        gene_counts = join(FC_PROCESSED, 'featurecounts.gene.quant'),
        tpm = join(FC_PROCESSED, 'featurecounts.gene.tpm'),
        gene_info = join(FC_PROCESSED, 'featurecounts.gene_info.tsv')
    shell:
        'Rscript {params.script} '
        '{input.counts} '
        '-o {params.output} '
        '-t featurecounts '
        '--output-tpm '
        '--gene-info {input.gene_info} '
        '-v'
